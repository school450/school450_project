document.addEventListener("DOMContentLoaded", () => {
    fetchIdeas();
});

async function fetchIdeas() {
    try {
        const response = await fetch("/ideas");
        const ideas = await response.json();
        const ideasList = document.getElementById("ideasList");
        ideasList.innerHTML = "";

        if (ideas.length === 0) {
            ideasList.innerHTML = "<p>–ù–µ—Ç –∑–∞—è–≤–æ–∫</p>";
            return;
        }

        ideas.forEach(idea => {
            const ideaElement = document.createElement("div");
            ideaElement.classList.add("idea-card");

            let color;
            switch (idea.status) {
                case "–Ω–æ–≤–∞—è": color = "#b3d9ff"; break;
                case "–≤ —Ä–∞–±–æ—Ç–µ": color = "#ffcc66"; break;
                case "–æ–¥–æ–±—Ä–µ–Ω–æ": color = "#99ff99"; break;
                case "–æ—Ç–∫–ª–æ–Ω–µ–Ω–æ": color = "#fa0202"; break;
            }
            ideaElement.style.backgroundColor = color;

            ideaElement.innerHTML = `
    <div>
        <p><strong>–ò–¥–µ—è:</strong> ${idea.idea}</p>
        <p style="font-size: 12px; color: gray;"><strong>–î–∞—Ç–∞:</strong> ${new Date(idea.created_at).toLocaleString()}</p>
    </div>
    <div>
        <select onchange="updateStatus(${idea.id}, this.value)">
            <option value="–Ω–æ–≤–∞—è" ${idea.status === "–Ω–æ–≤–∞—è" ? "selected" : ""}>–ù–æ–≤–∞—è</option>
            <option value="–≤ —Ä–∞–±–æ—Ç–µ" ${idea.status === "–≤ —Ä–∞–±–æ—Ç–µ" ? "selected" : ""}>–í —Ä–∞–±–æ—Ç–µ</option>
            <option value="–æ–¥–æ–±—Ä–µ–Ω–æ" ${idea.status === "–æ–¥–æ–±—Ä–µ–Ω–æ" ? "selected" : ""}>–û–¥–æ–±—Ä–µ–Ω–æ</option>
            <option value="–∑–∞–≤–µ—Ä—à–µ–Ω–∞" ${idea.status === "–∑–∞–≤–µ—Ä—à–µ–Ω–∞" ? "selected" : ""}>–ó–∞–≤–µ—Ä—à–µ–Ω–∞</option>
        </select>
        <button onclick="deleteIdea(${idea.id})">üóë –£–¥–∞–ª–∏—Ç—å</button>
    </div>
`;


            ideasList.appendChild(ideaElement);
        });
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–¥–µ–π:", error);
    }
}

async function deleteIdea(id) {
    if (!confirm("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç—É –∑–∞—è–≤–∫—É?")) return;

    try {
        const response = await fetch(`/ideas/${id}`, {
            method: "DELETE",
            headers: { "Authorization": `Bearer ${localStorage.getItem("adminToken")}` }
        });

        if (response.ok) {
            fetchIdeas();
        }
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è:", error);
    }
}

async function updateStatus(id, newStatus) {
    try {
        const response = await fetch(`/ideas/${id}/status`, {
            method: "PATCH",
            headers: {
                "Content-Type": "application/json",
                "Authorization": `Bearer ${localStorage.getItem("adminToken")}`
            },
            body: JSON.stringify({ status: newStatus })
        });

        if (response.ok) {
            fetchIdeas(); // –¢–µ–ø–µ—Ä—å —Å–ø–∏—Å–æ–∫ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
        }
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞:", error);
    }
}

const serverUrl = window.location.origin;

async function loginAdmin() {
    const code = document.getElementById('adminCode').value;
    try {
        const response = await fetch(`${serverUrl}/admin/login`, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ code })
        });

        const result = await response.json();
        if (response.ok) {
            localStorage.setItem("adminToken", result.token);
            document.getElementById('adminSection').style.display = 'block';
            fetchIdeas(); // <-- –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å fetchIdeas(), –∞ –Ω–µ loadIdeas()
        } else {
            alert(result.error);
        }
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:", error);
    }
}
document.addEventListener("DOMContentLoaded", () => {
    fetchIdeas();

    // –ü–æ–¥–¥–µ—Ä–∂–∫–∞ Enter –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –∞–¥–º–∏–Ω–∫—É
    document.getElementById("adminCode").addEventListener("keypress", (event) => {
        if (event.key === "Enter") {
            event.preventDefault();
            loginAdmin();
        }
    });

    // –ü–æ–¥–¥–µ—Ä–∂–∫–∞ Enter –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–≤–æ–π –∏–¥–µ–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å –ø–æ–ª–µ –≤–≤–æ–¥–∞)
    const ideaInput = document.getElementById("ideaInput");
    if (ideaInput) {
        ideaInput.addEventListener("keypress", (event) => {
            if (event.key === "Enter") {
                event.preventDefault();
                submitIdea();
            }
        });
    }
});
